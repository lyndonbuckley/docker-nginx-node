
user root;
worker_processes auto;
pcre_jit on;
error_log /var/log/nginx/error.log warn;
include /etc/nginx/modules/*.conf;

events {
	worker_connections 1024;
}

http {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;
	server_tokens off;
	client_max_body_size 0;
	sendfile on;
	tcp_nopush on;

	map $http_upgrade $connection_upgrade {
		default upgrade;
		'' close;
	}

	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
			'$status $body_bytes_sent "$http_referer" '
			'"$http_user_agent" "$http_x_forwarded_for"';

	access_log /var/log/nginx/access.log main;

    map $sent_http_content_type $expires {
        default off;
        text/html epoch;
        font/woff2 max;
        font/woff max;
        text/css max;
        application/javascript max;
        ~image/ max;
    }

    upstream node-app {
        server 127.0.0.1:8080;
    }

    server {
        listen 80;
        server_name _;

        charset utf-8;
        root /app/dist/public;

        location / {
            autoindex on;
            try_files $uri @node;
        }

        location @node {
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://node-app;
        }

        gzip on;
        gzip_types text/css text/json application/javascript;
        gzip_comp_level 6;
        gzip_min_length 256;
        gzip_proxied any;
        gzip_vary on;

        expires $expires;
    }
}
